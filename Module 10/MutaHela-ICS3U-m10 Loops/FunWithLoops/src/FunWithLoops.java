/*
  *Created by M.Helal
  *On October 9
  *to display all integers between two user inputs
 */

public class FunWithLoops extends javax.swing.JFrame {

    /**
     * Creates new form FunWithLoops
     */
    public FunWithLoops() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        startingNumberLabel = new javax.swing.JLabel();
        startingNumberInput = new javax.swing.JTextField();
        endingNumberLabel = new javax.swing.JLabel();
        endingNumberInput = new javax.swing.JTextField();
        outputLabel = new javax.swing.JLabel();
        showButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(0, 0, 204));
        titleLabel.setText("Show me Numbers Between...");

        startingNumberLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        startingNumberLabel.setText("Enter a starting number:");

        startingNumberInput.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N

        endingNumberLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        endingNumberLabel.setText("Enter an ending number:");

        endingNumberInput.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N

        outputLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        outputLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        showButton.setText("Show Numbers");
        showButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(startingNumberLabel)
                            .addComponent(endingNumberLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(startingNumberInput, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                            .addComponent(endingNumberInput))
                        .addGap(18, 18, 18)
                        .addComponent(showButton))
                    .addComponent(outputLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 890, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startingNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startingNumberLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endingNumberLabel)
                    .addComponent(endingNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(outputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showButtonActionPerformed
        // validate input
        try {
            int startingNum = Integer.parseInt(startingNumberInput.getText());
            int endingNum = Integer.parseInt(endingNumberInput.getText());
        } catch (NumberFormatException e) {
            outputLabel.setText("Please enter valid numbers.");
            return;
        }

        // clear output
        outputLabel.setText("");

        // initialize variables
        int startingNum = Integer.parseInt(startingNumberInput.getText());
        int endingNum = Integer.parseInt(endingNumberInput.getText());

        // display numbers to the user 
        for (int i = startingNum; i <= endingNum; i++) {
            outputLabel.setText(outputLabel.getText() + " " + i);
        }

        // further validate input
        if (startingNum > endingNum) {
            outputLabel.setText("Your starting number should be smaller than"
                    + " the ending number.");
        }
    }//GEN-LAST:event_showButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FunWithLoops.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FunWithLoops.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FunWithLoops.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FunWithLoops.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FunWithLoops().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField endingNumberInput;
    private javax.swing.JLabel endingNumberLabel;
    private javax.swing.JLabel outputLabel;
    private javax.swing.JButton showButton;
    private javax.swing.JTextField startingNumberInput;
    private javax.swing.JLabel startingNumberLabel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
