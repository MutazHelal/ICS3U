
import java.text.*;

/*
  *Created by M.Helal
  *On October 18
  *to create a simple metric conversion application
 */
public class MetricConversion extends javax.swing.JFrame {

    /**
     * Creates new form MetricConversion
     */
    public MetricConversion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        inchCentimetreLabel = new javax.swing.JLabel();
        feetCentimetreLabel = new javax.swing.JLabel();
        yardMetreLabel = new javax.swing.JLabel();
        mileKilometreLabel = new javax.swing.JLabel();
        menuChoiceLabel = new javax.swing.JLabel();
        choiceInput = new javax.swing.JTextField();
        valueLabel = new javax.swing.JLabel();
        valueInput = new javax.swing.JTextField();
        convertButton = new javax.swing.JButton();
        menuSeperator = new javax.swing.JSeparator();
        outputLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(0, 0, 255));
        titleLabel.setText("Linear Conversion");

        inchCentimetreLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        inchCentimetreLabel.setText("1. Inches to Centimetres");

        feetCentimetreLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        feetCentimetreLabel.setText("2. Feet to Centimetres");

        yardMetreLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        yardMetreLabel.setText("3. Yards to Metres");

        mileKilometreLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        mileKilometreLabel.setText("4. Miles to Kilometres");

        menuChoiceLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        menuChoiceLabel.setText("Enter conversion choice (1-4):");

        choiceInput.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        valueLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        valueLabel.setText("Enter value to be converted:");

        valueInput.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        convertButton.setText("Convert");
        convertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertButtonActionPerformed(evt);
            }
        });

        outputLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        outputLabel.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(outputLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inchCentimetreLabel)
                            .addComponent(feetCentimetreLabel)
                            .addComponent(yardMetreLabel)
                            .addComponent(mileKilometreLabel)
                            .addComponent(menuSeperator, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(titleLabel)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(menuChoiceLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                                    .addComponent(choiceInput, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(valueLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(valueInput, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(convertButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 76, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(titleLabel)
                .addGap(18, 18, 18)
                .addComponent(inchCentimetreLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(feetCentimetreLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yardMetreLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mileKilometreLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(menuSeperator, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(menuChoiceLabel)
                    .addComponent(choiceInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valueLabel)
                    .addComponent(valueInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(convertButton)
                .addGap(18, 18, 18)
                .addComponent(outputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void convertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertButtonActionPerformed
        // create variables
        int type;
        double measure, conversion;
        String output;

        // validate input
        try {
            type = Integer.parseInt(choiceInput.getText());
            measure = Double.parseDouble(valueInput.getText());
        } catch (NumberFormatException e) {
            outputLabel.setText("Please enter valid inputs.");
            return;
        }

        // output conversion to the user
        DecimalFormat twoDigits = new DecimalFormat("0.00");
        switch (type) {
            case 1:
                conversion = inchesToCentimetres(measure);
                output = measure + " inches = " + twoDigits.format(conversion)
                        + " centimetres";
                break;
            case 2:
                conversion = feetToToCentimetres(measure);
                output = measure + " feet = " + twoDigits.format(conversion)
                        + " centimetres";
                break;
            case 3:
                conversion = yardsToMetres(measure);
                output = measure + " yards = " + twoDigits.format(conversion)
                        + " metres";
                break;
            case 4:
                conversion = milesToKilometres(measure);
                output = measure + " miles = " + twoDigits.format(conversion)
                        + " kilometres";
                break;
            default:
                output = "Please enter a valid conversion choice.";
                break;
        }
        outputLabel.setText(output);
    }

    private double inchesToCentimetres(double inches) {
        // convert measure
        double centimetres = inches * 2.54;
        return centimetres;
    }//GEN-LAST:event_convertButtonActionPerformed

    private double feetToToCentimetres(double feet) {
        //convert measure
        double centimetres = feet * 30;
        return centimetres;

    }

    private double yardsToMetres(double yards) {
        // convert measure
        double metres = yards * 0.91;
        return metres;

    }

    private double milesToKilometres(double miles) {
        // convert measure
        double kilometres = miles * 1.6;
        return kilometres;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MetricConversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MetricConversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MetricConversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MetricConversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MetricConversion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField choiceInput;
    private javax.swing.JButton convertButton;
    private javax.swing.JLabel feetCentimetreLabel;
    private javax.swing.JLabel inchCentimetreLabel;
    private javax.swing.JLabel menuChoiceLabel;
    private javax.swing.JSeparator menuSeperator;
    private javax.swing.JLabel mileKilometreLabel;
    private javax.swing.JLabel outputLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField valueInput;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JLabel yardMetreLabel;
    // End of variables declaration//GEN-END:variables
}
